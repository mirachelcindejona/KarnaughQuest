{"ast":null,"code":"// Data soal untuk setiap level\nconst questions = {\n  level1: [{\n    id: \"1-1\",\n    title: \"Gerbang AND\",\n    description: \"Buatlah peta Karnaugh untuk gerbang logika AND (F = A ∙ B)\",\n    mapSize: {\n      rows: 2,\n      cols: 2\n    },\n    rowLabels: [\"A'\", \"A\"],\n    colLabels: [\"B'\", \"B\"],\n    gateType: \"AND\",\n    variables: [\"A\", \"B\"],\n    correctAnswer: [[\"0\", \"0\"], [\"0\", \"1\"]],\n    explanation: \"Pada gerbang AND, output bernilai 1 hanya jika semua input bernilai 1. Dalam peta Karnaugh, ini berarti hanya sel yang merepresentasikan A=1 dan B=1 yang bernilai 1, sedangkan sel lainnya bernilai 0.\"\n  }, {\n    id: \"1-2\",\n    title: \"Gerbang OR\",\n    description: \"Buatlah peta Karnaugh untuk gerbang logika OR (F = A + B)\",\n    mapSize: {\n      rows: 2,\n      cols: 2\n    },\n    rowLabels: [\"A'\", \"A\"],\n    colLabels: [\"B'\", \"B\"],\n    gateType: \"OR\",\n    variables: [\"A\", \"B\"],\n    correctAnswer: [[\"0\", \"1\"], [\"1\", \"1\"]],\n    explanation: \"Pada gerbang OR, output bernilai 1 jika minimal satu input bernilai 1. Dalam peta Karnaugh, sel-sel yang merepresentasikan A=1 atau B=1 bernilai 1, sedangkan sel yang merepresentasikan A=0 dan B=0 bernilai 0.\"\n  }, {\n    id: \"1-3\",\n    title: \"Gerbang NOT\",\n    description: \"Buatlah peta Karnaugh untuk gerbang logika NOT (F = A')\",\n    mapSize: {\n      rows: 2,\n      cols: 1\n    },\n    rowLabels: [\"A'\", \"A\"],\n    colLabels: [\"\"],\n    gateType: \"NOT\",\n    variables: [\"A\"],\n    correctAnswer: [[\"1\"], [\"0\"]],\n    explanation: \"Pada gerbang NOT, output merupakan kebalikan dari input. Dalam peta Karnaugh, sel yang merepresentasikan A=0 bernilai 1, dan sel yang merepresentasikan A=1 bernilai 0.\"\n  }],\n  level2: [{\n    id: \"2-1\",\n    title: \"Gerbang NAND\",\n    description: \"Buatlah peta Karnaugh untuk gerbang logika NAND (F = (A ∙ B)')\",\n    mapSize: {\n      rows: 2,\n      cols: 2\n    },\n    rowLabels: [\"A'\", \"A\"],\n    colLabels: [\"B'\", \"B\"],\n    gateType: \"NAND\",\n    variables: [\"A\", \"B\"],\n    correctAnswer: [[\"1\", \"1\"], [\"1\", \"0\"]],\n    explanation: \"Gerbang NAND merupakan kebalikan dari gerbang AND. Output bernilai 0 hanya jika semua input bernilai 1. Dalam peta Karnaugh, hanya sel yang merepresentasikan A=1 dan B=1 yang bernilai 0, sedangkan sel lainnya bernilai 1.\"\n  }, {\n    id: \"2-2\",\n    title: \"Gerbang NOR\",\n    description: \"Buatlah peta Karnaugh untuk gerbang logika NOR (F = (A + B)')\",\n    mapSize: {\n      rows: 2,\n      cols: 2\n    },\n    rowLabels: [\"A'\", \"A\"],\n    colLabels: [\"B'\", \"B\"],\n    gateType: \"NOR\",\n    variables: [\"A\", \"B\"],\n    correctAnswer: [[\"1\", \"0\"], [\"0\", \"0\"]],\n    explanation: \"Gerbang NOR merupakan kebalikan dari gerbang OR. Output bernilai 1 hanya jika semua input bernilai 0. Dalam peta Karnaugh, hanya sel yang merepresentasikan A=0 dan B=0 yang bernilai 1, sedangkan sel lainnya bernilai 0.\"\n  }, {\n    id: \"2-3\",\n    title: \"Gerbang XOR\",\n    description: \"Buatlah peta Karnaugh untuk gerbang logika XOR (F = A ⊕ B)\",\n    mapSize: {\n      rows: 2,\n      cols: 2\n    },\n    rowLabels: [\"A'\", \"A\"],\n    colLabels: [\"B'\", \"B\"],\n    gateType: \"XOR\",\n    variables: [\"A\", \"B\"],\n    correctAnswer: [[\"0\", \"1\"], [\"1\", \"0\"]],\n    explanation: \"Pada gerbang XOR, output bernilai 1 jika input-input memiliki nilai yang berbeda. Dalam peta Karnaugh, sel-sel yang merepresentasikan A=0,B=1 dan A=1,B=0 bernilai 1, sedangkan sel-sel yang merepresentasikan A=0,B=0 dan A=1,B=1 bernilai 0.\"\n  }],\n  level3: [{\n    id: \"3-1\",\n    title: \"Fungsi Boolean 3 Variabel\",\n    description: \"Buatlah peta Karnaugh untuk fungsi F = AB + BC + A'C\",\n    mapSize: {\n      rows: 2,\n      cols: 4\n    },\n    rowLabels: [\"A'\", \"A\"],\n    colLabels: [\"B'C'\", \"B'C\", \"BC\", \"BC'\"],\n    gateType: \"Complex\",\n    variables: [\"A\", \"B\", \"C\"],\n    correctAnswer: [[\"0\", \"1\", \"1\", \"0\"], [\"0\", \"0\", \"1\", \"1\"]],\n    explanation: \"Untuk fungsi F = AB + BC + A'C, kita bisa mengisi peta Karnaugh berdasarkan masing-masing term. Term AB mengisi sel A=1,B=1, term BC mengisi sel B=1,C=1, dan term A'C mengisi sel A=0,C=1. Setelah diisi, kita bisa melihat bahwa peta Karnaugh membentuk pola tertentu yang dapat disederhanakan menjadi fungsi yang lebih sederhana.\"\n  }, {\n    id: \"3-2\",\n    title: \"Fungsi Boolean 4 Variabel\",\n    description: \"Buatlah peta Karnaugh untuk fungsi F = A'B'C'D' + ABCD\",\n    mapSize: {\n      rows: 4,\n      cols: 4\n    },\n    rowLabels: [\"A'B'\", \"A'B\", \"AB\", \"AB'\"],\n    colLabels: [\"C'D'\", \"C'D\", \"CD\", \"CD'\"],\n    gateType: \"Complex\",\n    variables: [\"A\", \"B\", \"C\", \"D\"],\n    correctAnswer: [[\"1\", \"0\", \"0\", \"0\"], [\"0\", \"0\", \"0\", \"0\"], [\"0\", \"0\", \"1\", \"0\"], [\"0\", \"0\", \"0\", \"0\"]],\n    explanation: \"Untuk fungsi F = A'B'C'D' + ABCD, kita mengisi peta Karnaugh berdasarkan minterms. Term A'B'C'D' mengisi sel A=0,B=0,C=0,D=0 (kiri atas), dan term ABCD mengisi sel A=1,B=1,C=1,D=1. Kedua sel ini bernilai 1, sedangkan sel lainnya bernilai 0.\"\n  }, {\n    id: \"3-3\",\n    title: \"Optimasi Fungsi Boolean\",\n    description: \"Buatlah peta Karnaugh untuk fungsi F = ABC + A'BC + AB'C + ABC'\",\n    mapSize: {\n      rows: 4,\n      cols: 2\n    },\n    rowLabels: [\"A'B'\", \"A'B\", \"AB\", \"AB'\"],\n    colLabels: [\"C'\", \"C\"],\n    gateType: \"Complex\",\n    variables: [\"A\", \"B\", \"C\"],\n    correctAnswer: [[\"0\", \"0\"], [\"0\", \"1\"], [\"1\", \"1\"], [\"0\", \"1\"]],\n    explanation: \"Untuk fungsi F = ABC + A'BC + AB'C + ABC', kita mengisi peta Karnaugh berdasarkan masing-masing term. Setelah diisi, kita bisa melihat bahwa peta Karnaugh membentuk pola tertentu. Dengan mengelompokkan sel-sel bernilai 1 yang berdekatan, kita bisa menyederhanakan fungsi menjadi BC + AC.\"\n  }]\n};\n\n// Function untuk mengambil soal berdasarkan level\nexport const getQuestionsByLevel = level => {\n  if (level === 1) return questions.level1;\n  if (level === 2) return questions.level2;\n  if (level === 3) return questions.level3;\n  return [];\n};\n\n// Function untuk mengambil soal spesifik\nexport const getQuestion = (level, questionNumber) => {\n  const levelQuestions = getQuestionsByLevel(level);\n  return levelQuestions[questionNumber - 1] || null;\n};","map":{"version":3,"names":["questions","level1","id","title","description","mapSize","rows","cols","rowLabels","colLabels","gateType","variables","correctAnswer","explanation","level2","level3","getQuestionsByLevel","level","getQuestion","questionNumber","levelQuestions"],"sources":["C:/Users/asus_/OneDrive/Dokumen/2-SEMESTER2/MTK DISKRIT/K-Map_GameWeb/src/data/questions.js"],"sourcesContent":["// Data soal untuk setiap level\r\nconst questions = {\r\n  level1: [\r\n    {\r\n      id: \"1-1\",\r\n      title: \"Gerbang AND\",\r\n      description: \"Buatlah peta Karnaugh untuk gerbang logika AND (F = A ∙ B)\",\r\n      mapSize: { rows: 2, cols: 2 },\r\n      rowLabels: [\"A'\", \"A\"],\r\n      colLabels: [\"B'\", \"B\"],\r\n      gateType: \"AND\",\r\n      variables: [\"A\", \"B\"],\r\n      correctAnswer: [\r\n        [\"0\", \"0\"],\r\n        [\"0\", \"1\"],\r\n      ],\r\n      explanation:\r\n        \"Pada gerbang AND, output bernilai 1 hanya jika semua input bernilai 1. Dalam peta Karnaugh, ini berarti hanya sel yang merepresentasikan A=1 dan B=1 yang bernilai 1, sedangkan sel lainnya bernilai 0.\",\r\n    },\r\n    {\r\n      id: \"1-2\",\r\n      title: \"Gerbang OR\",\r\n      description: \"Buatlah peta Karnaugh untuk gerbang logika OR (F = A + B)\",\r\n      mapSize: { rows: 2, cols: 2 },\r\n      rowLabels: [\"A'\", \"A\"],\r\n      colLabels: [\"B'\", \"B\"],\r\n      gateType: \"OR\",\r\n      variables: [\"A\", \"B\"],\r\n      correctAnswer: [\r\n        [\"0\", \"1\"],\r\n        [\"1\", \"1\"],\r\n      ],\r\n      explanation:\r\n        \"Pada gerbang OR, output bernilai 1 jika minimal satu input bernilai 1. Dalam peta Karnaugh, sel-sel yang merepresentasikan A=1 atau B=1 bernilai 1, sedangkan sel yang merepresentasikan A=0 dan B=0 bernilai 0.\",\r\n    },\r\n    {\r\n      id: \"1-3\",\r\n      title: \"Gerbang NOT\",\r\n      description: \"Buatlah peta Karnaugh untuk gerbang logika NOT (F = A')\",\r\n      mapSize: { rows: 2, cols: 1 },\r\n      rowLabels: [\"A'\", \"A\"],\r\n      colLabels: [\"\"],\r\n      gateType: \"NOT\",\r\n      variables: [\"A\"],\r\n      correctAnswer: [[\"1\"], [\"0\"]],\r\n      explanation:\r\n        \"Pada gerbang NOT, output merupakan kebalikan dari input. Dalam peta Karnaugh, sel yang merepresentasikan A=0 bernilai 1, dan sel yang merepresentasikan A=1 bernilai 0.\",\r\n    },\r\n  ],\r\n  level2: [\r\n    {\r\n      id: \"2-1\",\r\n      title: \"Gerbang NAND\",\r\n      description:\r\n        \"Buatlah peta Karnaugh untuk gerbang logika NAND (F = (A ∙ B)')\",\r\n      mapSize: { rows: 2, cols: 2 },\r\n      rowLabels: [\"A'\", \"A\"],\r\n      colLabels: [\"B'\", \"B\"],\r\n      gateType: \"NAND\",\r\n      variables: [\"A\", \"B\"],\r\n      correctAnswer: [\r\n        [\"1\", \"1\"],\r\n        [\"1\", \"0\"],\r\n      ],\r\n      explanation:\r\n        \"Gerbang NAND merupakan kebalikan dari gerbang AND. Output bernilai 0 hanya jika semua input bernilai 1. Dalam peta Karnaugh, hanya sel yang merepresentasikan A=1 dan B=1 yang bernilai 0, sedangkan sel lainnya bernilai 1.\",\r\n    },\r\n    {\r\n      id: \"2-2\",\r\n      title: \"Gerbang NOR\",\r\n      description:\r\n        \"Buatlah peta Karnaugh untuk gerbang logika NOR (F = (A + B)')\",\r\n      mapSize: { rows: 2, cols: 2 },\r\n      rowLabels: [\"A'\", \"A\"],\r\n      colLabels: [\"B'\", \"B\"],\r\n      gateType: \"NOR\",\r\n      variables: [\"A\", \"B\"],\r\n      correctAnswer: [\r\n        [\"1\", \"0\"],\r\n        [\"0\", \"0\"],\r\n      ],\r\n      explanation:\r\n        \"Gerbang NOR merupakan kebalikan dari gerbang OR. Output bernilai 1 hanya jika semua input bernilai 0. Dalam peta Karnaugh, hanya sel yang merepresentasikan A=0 dan B=0 yang bernilai 1, sedangkan sel lainnya bernilai 0.\",\r\n    },\r\n    {\r\n      id: \"2-3\",\r\n      title: \"Gerbang XOR\",\r\n      description: \"Buatlah peta Karnaugh untuk gerbang logika XOR (F = A ⊕ B)\",\r\n      mapSize: { rows: 2, cols: 2 },\r\n      rowLabels: [\"A'\", \"A\"],\r\n      colLabels: [\"B'\", \"B\"],\r\n      gateType: \"XOR\",\r\n      variables: [\"A\", \"B\"],\r\n      correctAnswer: [\r\n        [\"0\", \"1\"],\r\n        [\"1\", \"0\"],\r\n      ],\r\n      explanation:\r\n        \"Pada gerbang XOR, output bernilai 1 jika input-input memiliki nilai yang berbeda. Dalam peta Karnaugh, sel-sel yang merepresentasikan A=0,B=1 dan A=1,B=0 bernilai 1, sedangkan sel-sel yang merepresentasikan A=0,B=0 dan A=1,B=1 bernilai 0.\",\r\n    },\r\n  ],\r\n  level3: [\r\n    {\r\n      id: \"3-1\",\r\n      title: \"Fungsi Boolean 3 Variabel\",\r\n      description: \"Buatlah peta Karnaugh untuk fungsi F = AB + BC + A'C\",\r\n      mapSize: { rows: 2, cols: 4 },\r\n      rowLabels: [\"A'\", \"A\"],\r\n      colLabels: [\"B'C'\", \"B'C\", \"BC\", \"BC'\"],\r\n      gateType: \"Complex\",\r\n      variables: [\"A\", \"B\", \"C\"],\r\n      correctAnswer: [\r\n        [\"0\", \"1\", \"1\", \"0\"],\r\n        [\"0\", \"0\", \"1\", \"1\"],\r\n      ],\r\n      explanation:\r\n        \"Untuk fungsi F = AB + BC + A'C, kita bisa mengisi peta Karnaugh berdasarkan masing-masing term. Term AB mengisi sel A=1,B=1, term BC mengisi sel B=1,C=1, dan term A'C mengisi sel A=0,C=1. Setelah diisi, kita bisa melihat bahwa peta Karnaugh membentuk pola tertentu yang dapat disederhanakan menjadi fungsi yang lebih sederhana.\",\r\n    },\r\n    {\r\n      id: \"3-2\",\r\n      title: \"Fungsi Boolean 4 Variabel\",\r\n      description: \"Buatlah peta Karnaugh untuk fungsi F = A'B'C'D' + ABCD\",\r\n      mapSize: { rows: 4, cols: 4 },\r\n      rowLabels: [\"A'B'\", \"A'B\", \"AB\", \"AB'\"],\r\n      colLabels: [\"C'D'\", \"C'D\", \"CD\", \"CD'\"],\r\n      gateType: \"Complex\",\r\n      variables: [\"A\", \"B\", \"C\", \"D\"],\r\n      correctAnswer: [\r\n        [\"1\", \"0\", \"0\", \"0\"],\r\n        [\"0\", \"0\", \"0\", \"0\"],\r\n        [\"0\", \"0\", \"1\", \"0\"],\r\n        [\"0\", \"0\", \"0\", \"0\"],\r\n      ],\r\n      explanation:\r\n        \"Untuk fungsi F = A'B'C'D' + ABCD, kita mengisi peta Karnaugh berdasarkan minterms. Term A'B'C'D' mengisi sel A=0,B=0,C=0,D=0 (kiri atas), dan term ABCD mengisi sel A=1,B=1,C=1,D=1. Kedua sel ini bernilai 1, sedangkan sel lainnya bernilai 0.\",\r\n    },\r\n    {\r\n      id: \"3-3\",\r\n      title: \"Optimasi Fungsi Boolean\",\r\n      description:\r\n        \"Buatlah peta Karnaugh untuk fungsi F = ABC + A'BC + AB'C + ABC'\",\r\n      mapSize: { rows: 4, cols: 2 },\r\n      rowLabels: [\"A'B'\", \"A'B\", \"AB\", \"AB'\"],\r\n      colLabels: [\"C'\", \"C\"],\r\n      gateType: \"Complex\",\r\n      variables: [\"A\", \"B\", \"C\"],\r\n      correctAnswer: [\r\n        [\"0\", \"0\"],\r\n        [\"0\", \"1\"],\r\n        [\"1\", \"1\"],\r\n        [\"0\", \"1\"],\r\n      ],\r\n      explanation:\r\n        \"Untuk fungsi F = ABC + A'BC + AB'C + ABC', kita mengisi peta Karnaugh berdasarkan masing-masing term. Setelah diisi, kita bisa melihat bahwa peta Karnaugh membentuk pola tertentu. Dengan mengelompokkan sel-sel bernilai 1 yang berdekatan, kita bisa menyederhanakan fungsi menjadi BC + AC.\",\r\n    },\r\n  ],\r\n};\r\n\r\n// Function untuk mengambil soal berdasarkan level\r\nexport const getQuestionsByLevel = (level) => {\r\n  if (level === 1) return questions.level1;\r\n  if (level === 2) return questions.level2;\r\n  if (level === 3) return questions.level3;\r\n  return [];\r\n};\r\n\r\n// Function untuk mengambil soal spesifik\r\nexport const getQuestion = (level, questionNumber) => {\r\n  const levelQuestions = getQuestionsByLevel(level);\r\n  return levelQuestions[questionNumber - 1] || null;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}